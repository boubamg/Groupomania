{"ast":null,"code":"var _jsxFileName = \"/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Comments/Comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport commentAPI from '../../Api/commentAPI';\nimport Comment from './Comment';\nconst headers = {\n  'Authorization': `Bearer ${localStorage.getItem('token')}`\n};\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allComment: {}\n    };\n\n    this.handleDeleteComment = id => {};\n  }\n\n  componentDidMount() {\n    const id = this.props.articleId;\n    commentAPI.getComments(id, headers).then(comments => {\n      this.setState({\n        allComment: comments.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    let {\n      allComment\n    } = this.state;\n    const listeComment = Object.keys(allComment).map(id => /*#__PURE__*/React.createElement(Comment, {\n      key: allComment[id].id,\n      profilePicture: allComment[id].User.profilePicture,\n      name: allComment[id].User.firstname + ' ' + allComment[id].User.lastname,\n      comment: allComment[id].commentText,\n      handleDeleteComment: this.handleDeleteComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, listeComment);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Comments/Comments.js"],"names":["React","Component","Fragment","commentAPI","Comment","headers","localStorage","getItem","Comments","state","allComment","handleDeleteComment","id","componentDidMount","props","articleId","getComments","then","comments","setState","data","catch","err","console","log","render","listeComment","Object","keys","map","User","profilePicture","firstname","lastname","commentText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG;AACZ,mBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAD7C,CAAhB;;AAIA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BQ,KAF6B,GAErB;AACJC,MAAAA,UAAU,EAAE;AADR,KAFqB;;AAAA,SAe7BC,mBAf6B,GAeNC,EAAD,IAAQ,CAE7B,CAjB4B;AAAA;;AAM7BC,EAAAA,iBAAiB,GAAI;AACjB,UAAMD,EAAE,GAAG,KAAKE,KAAL,CAAWC,SAAtB;AACAZ,IAAAA,UAAU,CAACa,WAAX,CAAuBJ,EAAvB,EAA2BP,OAA3B,EACCY,IADD,CACMC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAEQ,QAAQ,CAACE;AAAtB,OAAd;AACH,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAKH;;AAMDG,EAAAA,MAAM,GAAI;AAEN,QAAI;AAACf,MAAAA;AAAD,QAAe,KAAKD,KAAxB;AAEA,UAAMiB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYlB,UAAZ,EACpBmB,GADoB,CAChBjB,EAAE,iBACH,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEF,UAAU,CAACE,EAAD,CAAV,CAAeA,EADxB;AAEI,MAAA,cAAc,EAAEF,UAAU,CAACE,EAAD,CAAV,CAAekB,IAAf,CAAoBC,cAFxC;AAGI,MAAA,IAAI,EAAErB,UAAU,CAACE,EAAD,CAAV,CAAekB,IAAf,CAAoBE,SAApB,GAAgC,GAAhC,GAAsCtB,UAAU,CAACE,EAAD,CAAV,CAAekB,IAAf,CAAoBG,QAHpE;AAII,MAAA,OAAO,EAAEvB,UAAU,CAACE,EAAD,CAAV,CAAesB,WAJ5B;AAKI,MAAA,mBAAmB,EAAE,KAAKvB,mBAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFiB,CAArB;AAYA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKe,YADL,CADJ;AAMH;;AAzC4B;;AA4CjC,eAAelB,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport commentAPI from '../../Api/commentAPI'\nimport Comment from './Comment'\n\nconst headers = {\n    'Authorization': `Bearer ${localStorage.getItem('token')}`\n};\n\nclass Comments extends Component {\n\n    state = {\n        allComment: {}\n    }\n\n    componentDidMount () {\n        const id = this.props.articleId\n        commentAPI.getComments(id, headers)\n        .then(comments => {\n            this.setState({allComment: comments.data})\n        })\n        .catch(err => console.log(err))\n    }\n\n    handleDeleteComment = (id) => {\n\n    }\n\n    render () {\n\n        let {allComment} = this.state\n\n        const listeComment = Object.keys(allComment)\n        .map(id => (\n            <Comment\n                key={allComment[id].id} \n                profilePicture={allComment[id].User.profilePicture}\n                name={allComment[id].User.firstname + ' ' + allComment[id].User.lastname}\n                comment={allComment[id].commentText}\n                handleDeleteComment={this.handleDeleteComment}\n            />\n        ))\n\n\n        return (\n            <Fragment>\n                {listeComment}\n            </Fragment>\n           \n        )\n    }\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}