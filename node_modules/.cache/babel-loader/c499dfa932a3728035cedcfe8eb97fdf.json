{"ast":null,"code":"var _jsxFileName = \"/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Comments/Comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport commentAPI from '../../Api/commentAPI';\nimport Comment from './Comment';\nconst headers = {\n  'Authorization': `Bearer ${localStorage.getItem('token')}`\n};\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allComment: {}\n    };\n\n    this.handleDeleteComment = (articleId, commentId) => {\n      commentAPI.deleteComments(articleId, commentId, headers).then(() => console.log(\"Comment was deleted\")).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.articleId;\n    commentAPI.getComments(id, headers).then(comments => {\n      this.setState({\n        allComment: comments.data\n      });\n      console.log(this.state.allComment);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    let {\n      allComment\n    } = this.state;\n    const listeComment = Object.keys(allComment).map(id => /*#__PURE__*/React.createElement(Comment, {\n      key: allComment[id].id,\n      profilePicture: allComment[id].User.profilePicture,\n      name: allComment[id].User.firstname + ' ' + allComment[id].User.lastname,\n      comment: allComment[id].commentText,\n      handleDeleteComment: () => {\n        this.handleDeleteComment(allComment[id].ArticleId, allComment[id].id);\n      },\n      creator: allComment[id].UserId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, listeComment);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Comments/Comments.js"],"names":["React","Component","Fragment","commentAPI","Comment","headers","localStorage","getItem","Comments","state","allComment","handleDeleteComment","articleId","commentId","deleteComments","then","console","log","catch","err","componentDidMount","id","props","getComments","comments","setState","data","render","listeComment","Object","keys","map","User","profilePicture","firstname","lastname","commentText","ArticleId","UserId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG;AACZ,mBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAD7C,CAAhB;;AAIA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BQ,KAF6B,GAErB;AACJC,MAAAA,UAAU,EAAE;AADR,KAFqB;;AAAA,SAiB7BC,mBAjB6B,GAiBP,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC5CV,MAAAA,UAAU,CAACW,cAAX,CAA0BF,SAA1B,EAAqCC,SAArC,EAAgDR,OAAhD,EACCU,IADD,CACM,MAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CADZ,EAECC,KAFD,CAEOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFd;AAGH,KArB4B;AAAA;;AAM7BC,EAAAA,iBAAiB,GAAI;AACjB,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWV,SAAtB;AACAT,IAAAA,UAAU,CAACoB,WAAX,CAAuBF,EAAvB,EAA2BhB,OAA3B,EACCU,IADD,CACMS,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACf,QAAAA,UAAU,EAAEc,QAAQ,CAACE;AAAtB,OAAd;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,UAAvB;AACH,KAJD,EAKCQ,KALD,CAKOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CALd;AAOH;;AAQDQ,EAAAA,MAAM,GAAI;AAEN,QAAI;AAACjB,MAAAA;AAAD,QAAe,KAAKD,KAAxB;AAEA,UAAMmB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYpB,UAAZ,EACpBqB,GADoB,CAChBV,EAAE,iBACH,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEX,UAAU,CAACW,EAAD,CAAV,CAAeA,EADxB;AAEI,MAAA,cAAc,EAAEX,UAAU,CAACW,EAAD,CAAV,CAAeW,IAAf,CAAoBC,cAFxC;AAGI,MAAA,IAAI,EAAEvB,UAAU,CAACW,EAAD,CAAV,CAAeW,IAAf,CAAoBE,SAApB,GAAgC,GAAhC,GAAsCxB,UAAU,CAACW,EAAD,CAAV,CAAeW,IAAf,CAAoBG,QAHpE;AAII,MAAA,OAAO,EAAEzB,UAAU,CAACW,EAAD,CAAV,CAAee,WAJ5B;AAKI,MAAA,mBAAmB,EAAE,MAAM;AAAC,aAAKzB,mBAAL,CAAyBD,UAAU,CAACW,EAAD,CAAV,CAAegB,SAAxC,EAAkD3B,UAAU,CAACW,EAAD,CAAV,CAAeA,EAAjE;AAAqE,OALrG;AAMI,MAAA,OAAO,EAAEX,UAAU,CAACW,EAAD,CAAV,CAAeiB,MAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFiB,CAArB;AAaA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,YADL,CADJ;AAMH;;AA9C4B;;AAiDjC,eAAepB,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport commentAPI from '../../Api/commentAPI'\nimport Comment from './Comment'\n\nconst headers = {\n    'Authorization': `Bearer ${localStorage.getItem('token')}`\n};\n\nclass Comments extends Component {\n\n    state = {\n        allComment: {}\n    }\n\n    componentDidMount () {\n        const id = this.props.articleId\n        commentAPI.getComments(id, headers)\n        .then(comments => {\n            this.setState({allComment: comments.data})\n            console.log(this.state.allComment)\n        })\n        .catch(err => console.log(err))\n       \n    }\n\n    handleDeleteComment = (articleId, commentId) => {\n        commentAPI.deleteComments(articleId, commentId, headers)\n        .then(() => console.log(\"Comment was deleted\"))\n        .catch(err => console.log(err))\n    }\n\n    render () {\n\n        let {allComment} = this.state\n\n        const listeComment = Object.keys(allComment)\n        .map(id => (\n            <Comment\n                key={allComment[id].id} \n                profilePicture={allComment[id].User.profilePicture}\n                name={allComment[id].User.firstname + ' ' + allComment[id].User.lastname}\n                comment={allComment[id].commentText}\n                handleDeleteComment={() => {this.handleDeleteComment(allComment[id].ArticleId,allComment[id].id)}}\n                creator={allComment[id].UserId}\n            />\n        ))\n\n\n        return (\n            <Fragment>\n                {listeComment}\n            </Fragment>\n           \n        )\n    }\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}