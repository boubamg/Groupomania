{"ast":null,"code":"var _jsxFileName = \"/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Comments/Comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport commentAPI from '../../Api/commentAPI';\nimport Comment from './Comment';\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allComment: {},\n      reqHeader: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n\n    this.handleDeleteComment = (articleId, commentId) => {\n      commentAPI.deleteComments(articleId, commentId, this.state.reqHeader).then(res => {\n        let allComment = [...this.state.allComment];\n        let comment = allComment.find(comment => comment.id === commentId);\n        console.log(comment);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.articleId;\n    commentAPI.getComments(id, this.state.reqHeader).then(comments => {\n      this.setState({\n        allComment: comments.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    let {\n      allComment\n    } = this.state;\n    const listeComment = Object.keys(allComment).map(id => /*#__PURE__*/React.createElement(Comment, {\n      key: allComment[id].id,\n      profilePicture: allComment[id].User.profilePicture,\n      name: allComment[id].User.firstname + ' ' + allComment[id].User.lastname,\n      comment: allComment[id].commentText,\n      handleDeleteComment: () => {\n        this.handleDeleteComment(allComment[id].ArticleId, allComment[id].id);\n      },\n      creator: allComment[id].UserId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, listeComment);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Comments/Comments.js"],"names":["React","Component","Fragment","commentAPI","Comment","Comments","state","allComment","reqHeader","localStorage","getItem","handleDeleteComment","articleId","commentId","deleteComments","then","res","comment","find","id","console","log","catch","err","componentDidMount","props","getComments","comments","setState","data","render","listeComment","Object","keys","map","User","profilePicture","firstname","lastname","commentText","ArticleId","UserId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BK,KAF6B,GAErB;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,SAAS,EAAE;AACP,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AAFP,KAFqB;;AAAA,SAkB7BC,mBAlB6B,GAkBP,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC5CV,MAAAA,UAAU,CAACW,cAAX,CAA0BF,SAA1B,EAAqCC,SAArC,EAAgD,KAAKP,KAAL,CAAWE,SAA3D,EACCO,IADD,CACMC,GAAG,IAAI;AACT,YAAIT,UAAU,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,UAAf,CAAjB;AACA,YAAIU,OAAO,GAAGV,UAAU,CAACW,IAAX,CAAgBD,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAeN,SAA1C,CAAd;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACH,OALD,EAMCK,KAND,CAMOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CANd;AAOH,KA1B4B;AAAA;;AAS7BC,EAAAA,iBAAiB,GAAI;AACjB,UAAML,EAAE,GAAG,KAAKM,KAAL,CAAWb,SAAtB;AACAT,IAAAA,UAAU,CAACuB,WAAX,CAAuBP,EAAvB,EAA2B,KAAKb,KAAL,CAAWE,SAAtC,EACCO,IADD,CACMY,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACrB,QAAAA,UAAU,EAAEoB,QAAQ,CAACE;AAAtB,OAAd;AACH,KAHD,EAICP,KAJD,CAIOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJd;AAKH;;AAYDO,EAAAA,MAAM,GAAI;AAEN,QAAI;AAACvB,MAAAA;AAAD,QAAe,KAAKD,KAAxB;AAEA,UAAMyB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAY1B,UAAZ,EACpB2B,GADoB,CAChBf,EAAE,iBACH,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEZ,UAAU,CAACY,EAAD,CAAV,CAAeA,EADxB;AAEI,MAAA,cAAc,EAAEZ,UAAU,CAACY,EAAD,CAAV,CAAegB,IAAf,CAAoBC,cAFxC;AAGI,MAAA,IAAI,EAAE7B,UAAU,CAACY,EAAD,CAAV,CAAegB,IAAf,CAAoBE,SAApB,GAAgC,GAAhC,GAAsC9B,UAAU,CAACY,EAAD,CAAV,CAAegB,IAAf,CAAoBG,QAHpE;AAII,MAAA,OAAO,EAAE/B,UAAU,CAACY,EAAD,CAAV,CAAeoB,WAJ5B;AAKI,MAAA,mBAAmB,EAAE,MAAM;AAAC,aAAK5B,mBAAL,CAAyBJ,UAAU,CAACY,EAAD,CAAV,CAAeqB,SAAxC,EAAkDjC,UAAU,CAACY,EAAD,CAAV,CAAeA,EAAjE;AAAqE,OALrG;AAMI,MAAA,OAAO,EAAEZ,UAAU,CAACY,EAAD,CAAV,CAAesB,MAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFiB,CAArB;AAaA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,YADL,CADJ;AAMH;;AAnD4B;;AAsDjC,eAAe1B,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport commentAPI from '../../Api/commentAPI'\nimport Comment from './Comment'\n\n\nclass Comments extends Component {\n\n    state = {\n        allComment: {},\n        reqHeader: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    componentDidMount () {\n        const id = this.props.articleId\n        commentAPI.getComments(id, this.state.reqHeader)\n        .then(comments => {\n            this.setState({allComment: comments.data})\n        })\n        .catch(err => console.log(err))\n    }\n\n    handleDeleteComment = (articleId, commentId) => {\n        commentAPI.deleteComments(articleId, commentId, this.state.reqHeader)\n        .then(res => {\n            let allComment = [...this.state.allComment]\n            let comment = allComment.find(comment => comment.id === commentId)\n            console.log(comment)\n        })\n        .catch(err => console.log(err))\n    }\n\n    render () {\n\n        let {allComment} = this.state\n\n        const listeComment = Object.keys(allComment)\n        .map(id => (\n            <Comment\n                key={allComment[id].id} \n                profilePicture={allComment[id].User.profilePicture}\n                name={allComment[id].User.firstname + ' ' + allComment[id].User.lastname}\n                comment={allComment[id].commentText}\n                handleDeleteComment={() => {this.handleDeleteComment(allComment[id].ArticleId,allComment[id].id)}}\n                creator={allComment[id].UserId}\n            />\n        ))\n\n\n        return (\n            <Fragment>\n                {listeComment}\n            </Fragment>\n           \n        )\n    }\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}