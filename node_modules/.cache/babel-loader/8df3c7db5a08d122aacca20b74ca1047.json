{"ast":null,"code":"var _jsxFileName = \"/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Login.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Form, FormGroup, Label, Button, Input, Container } from 'reactstrap';\nimport userAPI from '../Api/userAPI';\nimport { Redirect } from 'react-router-dom';\nimport './Connexion.css';\n\nclass loginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isValidForm: true,\n      errors: {},\n      redirection: false\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.verification = () => {\n      const {\n        email,\n        password,\n        errors,\n        isValidForm\n      } = this.state;\n\n      if (!/^[A-Za-z0-9_.-]+@[A-Za-z0-9_.-]+\\.[A-Za-z]{2,}$/.test(email)) {\n        errors['email'] = \"L'email est invalide\";\n        this.setState({\n          isValidForm: false\n        });\n      }\n\n      if (!password || password.length < 8) {\n        errors[\"password\"] = \"Le mot de passe doit avoir au moins 8 caractÃ¨res\";\n        this.setState({\n          formIsValid: false\n        });\n      }\n\n      return isValidForm;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        password,\n        redirection\n      } = this.state;\n\n      if (!this.verification()) {\n        return \"Le formulaire contient des erreurs\";\n      }\n\n      userAPI.login(email, password).then(response => {\n        localStorage.setItem('token', 'Bearer ' + response.data.token);\n        localStorage.setItem('userId', response.data.userId); // redirect\n\n        this.setState({\n          redirection: true\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    if (this.state.redirection) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"exemple@exemple.com\",\n      required: true,\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Mot de passe\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Mot de passe\",\n      required: true,\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"secondary\",\n      size: \"lg\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Se connecter\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => window.location.href = '/signup',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Cr\\xE9er un compte\")));\n  }\n\n}\n\nexport default loginForm;","map":{"version":3,"sources":["/Users/maiga/Desktop/DWJ OPC/P7_Maiga_Boubacar/frontend/src/components/Login.js"],"names":["React","Component","Fragment","Form","FormGroup","Label","Button","Input","Container","userAPI","Redirect","loginForm","state","email","password","isValidForm","errors","redirection","handleChange","event","name","value","target","setState","verification","test","length","formIsValid","handleSubmit","preventDefault","login","then","response","localStorage","setItem","data","token","userId","catch","err","console","log","render","color","window","location","href"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Form, FormGroup, Label, Button, Input, Container } from 'reactstrap';\nimport userAPI from '../Api/userAPI'\nimport {Redirect} from 'react-router-dom'\nimport './Connexion.css'\n\nclass loginForm extends Component {\n\n    state = {\n        email: \"\",\n        password: \"\",\n        isValidForm: true,\n        errors : {},\n        redirection: false\n    }\n\n    handleChange = event => {\n        const {name,value} = event.target;\n        this.setState({[name]: value})\n    }\n\n    verification = () => {\n        const {email, password, errors, isValidForm} = this.state;\n        if(!/^[A-Za-z0-9_.-]+@[A-Za-z0-9_.-]+\\.[A-Za-z]{2,}$/.test(email)){\n        errors['email'] = \"L'email est invalide\";\n        this.setState({isValidForm: false})\n        }\n\n        if(!password || password.length < 8 ){\n            errors[\"password\"] = \"Le mot de passe doit avoir au moins 8 caractÃ¨res\";\n            this.setState({formIsValid: false})\n        }\n        return isValidForm;\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const {email, password, redirection} = this.state\n\n        if(!this.verification()){\n            return \"Le formulaire contient des erreurs\"\n        }\n\n        userAPI.login(email, password)\n            .then(response => { \n                localStorage.setItem('token', 'Bearer '  + response.data.token)\n                localStorage.setItem('userId', response.data.userId)\n                // redirect\n                this.setState({redirection: true})\n            })\n            .catch(err => console.log(err))\n    }\n\n    render () {\n        \n        if(this.state.redirection){\n            return <Redirect to='/post'/>;\n        }\n\n        return (\n            <Fragment>\n                <Container className=\"container\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"exemple@exemple.com\" required\n                            value={this.state.email} onChange={this.handleChange}/>\n                            <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Mot de passe</Label>\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Mot de passe\" required\n                            value={this.state.password} onChange={this.handleChange}/>\n                            <span style={{color: \"red\"}}>{this.state.errors[\"password\"]}</span>\n                        </FormGroup>\n                        <Button type=\"submit\" color=\"secondary\" size=\"lg\" block>Se connecter</Button>\n                    </Form>\n                        <span className=\"line\"></span>\n                        <Button onClick={() => window.location.href='/signup'} >CrÃ©er un compte</Button>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n\nexport default loginForm"]},"metadata":{},"sourceType":"module"}